plugins {
    id 'fabric-loom' version "${loom_version}"
    id 'maven-publish'
}

version = '1.0.0'
group = 'com.example'
base {
    archivesName = 'examplemod'
}

repositories {
    mavenCentral()
    maven { url 'https://maven.fabricmc.net/' }
    maven { url 'https://jitpack.io' }
}

loom {
    splitEnvironmentSourceSets()

    sourceSets {
        client {
            java {
                srcDir 'src/client/java'
            }
            resources.srcDir 'src/client/resources'
        }
        main {
            java {
                srcDir 'src/main/java'
            }
            resources.srcDir 'src/main/resources'
        }
    }

    mods {
        "examplemod" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
}

dependencies {
    minecraft 'com.mojang:minecraft:1.21.1'
    mappings 'net.fabricmc:yarn:1.21.1+build.7:v2'
    modImplementation 'net.fabricmc:fabric-loader:0.17.3'
    modImplementation 'net.fabricmc.fabric-api:fabric-api:0.100.7+1.21.1'
}

processResources {
    inputs.property 'version', project.version
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    filesMatching('fabric.mod.json') {
        expand 'version': project.version
    }
}

processClientResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
    it.options.encoding = 'UTF-8'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    withSourcesJar()
}

tasks.named('sourcesJar') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

jar {
    from('LICENSE') {
        rename { "${it}_${project.base.archivesName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }
    repositories {
        // Add publishing repositories if needed
    }
}